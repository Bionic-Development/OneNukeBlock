package de.takacick.onedeathblock.registry;

import de.takacick.onedeathblock.OneDeathBlock;
import de.takacick.onedeathblock.registry.block.DeathBlock;
import de.takacick.onedeathblock.registry.block.ElectricutionerDoor;
import de.takacick.onedeathblock.registry.block.LegoCarpet;
import de.takacick.onedeathblock.registry.block.SpikedBedBlock;
import de.takacick.onedeathblock.registry.item.*;
import net.minecraft.block.*;
import net.minecraft.block.enums.BedPart;
import net.minecraft.item.*;
import net.minecraft.sound.BlockSoundGroup;
import net.minecraft.tag.TagKey;
import net.minecraft.util.DyeColor;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.Registry;

public class ItemRegistry {

    public static final TagKey<Block> SPIKED_SPIKED_BEDS = TagKey.of(Registry.BLOCK_KEY, new Identifier(OneDeathBlock.MOD_ID, "spiked_beds"));

    public static final Block DEATH_BLOCK = new DeathBlock(AbstractBlock.Settings.of(Material.SOLID_ORGANIC).ticksRandomly().strength(0.6f).sounds(BlockSoundGroup.GRASS));
    public static final Item DEATH_BLOCK_ITEM = new BlockItem(DEATH_BLOCK, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Item SKULLAGER_SPAWN_EGG = new SpawnEggItem(EntityRegistry.SKULLAGER, 0x494949, 0x959B9B, new Item.Settings().group(OneDeathBlock.ITEM_GROUP).maxCount(1));
    public static final Item SUPER_DEATH_TOTEM = new SuperDeathTotem(new Item.Settings().group(OneDeathBlock.ITEM_GROUP).maxCount(1));
    public static final Item HEART_CARVER = new HeartCarver(new Item.Settings().group(OneDeathBlock.ITEM_GROUP).maxDamage(1));
    public static final Item EXPLOSIVE_PLACING = new ExplosivePlacing(new Item.Settings().group(OneDeathBlock.ITEM_GROUP).maxCount(1));
    public static final Item DEADLY_SUPER_MAGNET = new DeadlySuperMagnet(new Item.Settings().group(OneDeathBlock.ITEM_GROUP).maxDamage(12));
    public static final Block ELECTRICUTIONER_DOOR = new ElectricutionerDoor(AbstractBlock.Settings.of(Material.METAL, MapColor.ORANGE).requiresTool().strength(5.0f).sounds(BlockSoundGroup.METAL).nonOpaque());
    public static final Item ELECTRICUTIONER_DOOR_ITEM = new TallBlockItem(ELECTRICUTIONER_DOOR, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Item SPIKY_IRON = new SpikyIron(new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Item SPIKY_IRON_PICKAXE = new SpikyIronPickaxe(ToolMaterials.IRON, 1, -2.8f, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Item EDIBLE_TNT = new EdibleTnt(new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Item SPIKY_IRON_ARMOR_SUIT = new SpikyIronArmorSuit(new Item.Settings().group(OneDeathBlock.ITEM_GROUP).maxDamage(40));
    public static final Item VENOMOUS_POTATO = new VenomousPotato(new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Item HEAD_SPAWNER = new HeadSpawner(new Item.Settings().group(OneDeathBlock.ITEM_GROUP).maxCount(1));
    public static final Item HEART = new Item(new Item.Settings());
    public static final Item BUILD_METEOR = new Item(new Item.Settings());

    public static final Block WHITE_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.WHITE);
    public static final Item WHITE_SPIKED_BED_ITEM = new SpikedBedItem(WHITE_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block ORANGE_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.ORANGE);
    public static final Item ORANGE_SPIKED_BED_ITEM = new SpikedBedItem(ORANGE_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block MAGENTA_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.MAGENTA);
    public static final Item MAGENTA_SPIKED_BED_ITEM = new SpikedBedItem(MAGENTA_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block LIGHT_BLUE_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.LIGHT_BLUE);
    public static final Item LIGHT_BLUE_SPIKED_BED_ITEM = new SpikedBedItem(LIGHT_BLUE_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block YELLOW_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.YELLOW);
    public static final Item YELLOW_SPIKED_BED_ITEM = new SpikedBedItem(YELLOW_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block LIME_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.LIME);
    public static final Item LIME_SPIKED_BED_ITEM = new SpikedBedItem(LIME_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block PINK_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.PINK);
    public static final Item PINK_SPIKED_BED_ITEM = new SpikedBedItem(PINK_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block GRAY_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.GRAY);
    public static final Item GRAY_SPIKED_BED_ITEM = new SpikedBedItem(GRAY_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block LIGHT_GRAY_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.LIGHT_GRAY);
    public static final Item LIGHT_GRAY_SPIKED_BED_ITEM = new SpikedBedItem(LIGHT_GRAY_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block CYAN_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.CYAN);
    public static final Item CYAN_SPIKED_BED_ITEM = new SpikedBedItem(CYAN_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block PURPLE_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.PURPLE);
    public static final Item PURPLE_SPIKED_BED_ITEM = new SpikedBedItem(PURPLE_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block BLUE_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.BLUE);
    public static final Item BLUE_SPIKED_BED_ITEM = new SpikedBedItem(BLUE_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block BROWN_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.BROWN);
    public static final Item BROWN_SPIKED_BED_ITEM = new SpikedBedItem(BROWN_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block GREEN_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.GREEN);
    public static final Item GREEN_SPIKED_BED_ITEM = new SpikedBedItem(GREEN_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block RED_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.RED);
    public static final Item RED_SPIKED_BED_ITEM = new SpikedBedItem(RED_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));
    public static final Block BLACK_SPIKED_BED = ItemRegistry.createBedBlock(DyeColor.BLACK);
    public static final Item BLACK_SPIKED_BED_ITEM = new SpikedBedItem(BLACK_SPIKED_BED, new Item.Settings().maxCount(1).group(OneDeathBlock.ITEM_GROUP));

    public static final Block WHITE_LEGO_CARPET = new LegoCarpet(DyeColor.WHITE, AbstractBlock.Settings.of(Material.CARPET, MapColor.WHITE).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item WHITE_LEGO_CARPET_ITEM = new BlockItem(WHITE_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block ORANGE_LEGO_CARPET = new LegoCarpet(DyeColor.ORANGE, AbstractBlock.Settings.of(Material.CARPET, MapColor.ORANGE).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item ORANGE_LEGO_CARPET_ITEM = new BlockItem(ORANGE_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block MAGENTA_LEGO_CARPET = new LegoCarpet(DyeColor.MAGENTA, AbstractBlock.Settings.of(Material.CARPET, MapColor.MAGENTA).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item MAGENTA_LEGO_CARPET_ITEM = new BlockItem(MAGENTA_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block LIGHT_BLUE_LEGO_CARPET = new LegoCarpet(DyeColor.LIGHT_BLUE, AbstractBlock.Settings.of(Material.CARPET, MapColor.LIGHT_BLUE).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item LIGHT_BLUE_LEGO_CARPET_ITEM = new BlockItem(LIGHT_BLUE_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block YELLOW_LEGO_CARPET = new LegoCarpet(DyeColor.YELLOW, AbstractBlock.Settings.of(Material.CARPET, MapColor.YELLOW).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item YELLOW_LEGO_CARPET_ITEM = new BlockItem(YELLOW_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block LIME_LEGO_CARPET = new LegoCarpet(DyeColor.LIME, AbstractBlock.Settings.of(Material.CARPET, MapColor.LIME).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item LIME_LEGO_CARPET_ITEM = new BlockItem(LIME_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block PINK_LEGO_CARPET = new LegoCarpet(DyeColor.PINK, AbstractBlock.Settings.of(Material.CARPET, MapColor.PINK).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item PINK_LEGO_CARPET_ITEM = new BlockItem(PINK_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block GRAY_LEGO_CARPET = new LegoCarpet(DyeColor.GRAY, AbstractBlock.Settings.of(Material.CARPET, MapColor.GRAY).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item GRAY_LEGO_CARPET_ITEM = new BlockItem(GRAY_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block LIGHT_GRAY_LEGO_CARPET = new LegoCarpet(DyeColor.LIGHT_GRAY, AbstractBlock.Settings.of(Material.CARPET, MapColor.LIGHT_GRAY).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item LIGHT_GRAY_LEGO_CARPET_ITEM = new BlockItem(LIGHT_GRAY_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block CYAN_LEGO_CARPET = new LegoCarpet(DyeColor.CYAN, AbstractBlock.Settings.of(Material.CARPET, MapColor.CYAN).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item CYAN_LEGO_CARPET_ITEM = new BlockItem(CYAN_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block PURPLE_LEGO_CARPET = new LegoCarpet(DyeColor.PURPLE, AbstractBlock.Settings.of(Material.CARPET, MapColor.PURPLE).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item PURPLE_LEGO_CARPET_ITEM = new BlockItem(PURPLE_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block BLUE_LEGO_CARPET = new LegoCarpet(DyeColor.BLUE, AbstractBlock.Settings.of(Material.CARPET, MapColor.BLUE).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item BLUE_LEGO_CARPET_ITEM = new BlockItem(BLUE_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block BROWN_LEGO_CARPET = new LegoCarpet(DyeColor.BROWN, AbstractBlock.Settings.of(Material.CARPET, MapColor.BROWN).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item BROWN_LEGO_CARPET_ITEM = new BlockItem(BROWN_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block GREEN_LEGO_CARPET = new LegoCarpet(DyeColor.GREEN, AbstractBlock.Settings.of(Material.CARPET, MapColor.GREEN).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item GREEN_LEGO_CARPET_ITEM = new BlockItem(GREEN_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block RED_LEGO_CARPET = new LegoCarpet(DyeColor.RED, AbstractBlock.Settings.of(Material.CARPET, MapColor.RED).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item RED_LEGO_CARPET_ITEM = new BlockItem(RED_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));
    public static final Block BLACK_LEGO_CARPET = new LegoCarpet(DyeColor.BLACK, AbstractBlock.Settings.of(Material.CARPET, MapColor.BLACK).strength(0.1f).sounds(BlockSoundGroup.WOOL));
    public static final Item BLACK_LEGO_CARPET_ITEM = new BlockItem(BLACK_LEGO_CARPET, new Item.Settings().group(OneDeathBlock.ITEM_GROUP));

    public static void register() {
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "death_block"), DEATH_BLOCK);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "death_block"), DEATH_BLOCK_ITEM);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "build_meteor"), BUILD_METEOR);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "skullager_spawn_egg"), SKULLAGER_SPAWN_EGG);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "super_death_totem"), SUPER_DEATH_TOTEM);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "heart_carver"), HEART_CARVER);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "explosive_placing"), EXPLOSIVE_PLACING);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "deadly_super_magnet"), DEADLY_SUPER_MAGNET);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "electricutioner_door"), ELECTRICUTIONER_DOOR);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "electricutioner_door"), ELECTRICUTIONER_DOOR_ITEM);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "spiky_iron"), SPIKY_IRON);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "spiky_iron_pickaxe"), SPIKY_IRON_PICKAXE);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "edible_tnt"), EDIBLE_TNT);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "spiky_iron_armor_suit"), SPIKY_IRON_ARMOR_SUIT);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "venomous_potato"), VENOMOUS_POTATO);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "head_spawner"), HEAD_SPAWNER);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "heart"), HEART);

        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "white_spiked_bed"), WHITE_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "white_spiked_bed"), WHITE_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "orange_spiked_bed"), ORANGE_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "orange_spiked_bed"), ORANGE_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "magenta_spiked_bed"), MAGENTA_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "magenta_spiked_bed"), MAGENTA_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "light_blue_spiked_bed"), LIGHT_BLUE_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "light_blue_spiked_bed"), LIGHT_BLUE_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "yellow_spiked_bed"), YELLOW_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "yellow_spiked_bed"), YELLOW_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "lime_spiked_bed"), LIME_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "lime_spiked_bed"), LIME_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "pink_spiked_bed"), PINK_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "pink_spiked_bed"), PINK_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "gray_spiked_bed"), GRAY_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "gray_spiked_bed"), GRAY_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "light_gray_spiked_bed"), LIGHT_GRAY_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "light_gray_spiked_bed"), LIGHT_GRAY_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "cyan_spiked_bed"), CYAN_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "cyan_spiked_bed"), CYAN_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "purple_spiked_bed"), PURPLE_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "purple_spiked_bed"), PURPLE_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "blue_spiked_bed"), BLUE_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "blue_spiked_bed"), BLUE_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "brown_spiked_bed"), BROWN_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "brown_spiked_bed"), BROWN_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "green_spiked_bed"), GREEN_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "green_spiked_bed"), GREEN_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "red_spiked_bed"), RED_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "red_spiked_bed"), RED_SPIKED_BED_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "black_spiked_bed"), BLACK_SPIKED_BED);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "black_spiked_bed"), BLACK_SPIKED_BED_ITEM);

        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "white_lego_carpet"), WHITE_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "white_lego_carpet"), WHITE_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "orange_lego_carpet"), ORANGE_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "orange_lego_carpet"), ORANGE_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "magenta_lego_carpet"), MAGENTA_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "magenta_lego_carpet"), MAGENTA_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "light_blue_lego_carpet"), LIGHT_BLUE_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "light_blue_lego_carpet"), LIGHT_BLUE_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "yellow_lego_carpet"), YELLOW_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "yellow_lego_carpet"), YELLOW_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "lime_lego_carpet"), LIME_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "lime_lego_carpet"), LIME_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "pink_lego_carpet"), PINK_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "pink_lego_carpet"), PINK_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "gray_lego_carpet"), GRAY_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "gray_lego_carpet"), GRAY_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "light_gray_lego_carpet"), LIGHT_GRAY_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "light_gray_lego_carpet"), LIGHT_GRAY_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "cyan_lego_carpet"), CYAN_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "cyan_lego_carpet"), CYAN_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "purple_lego_carpet"), PURPLE_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "purple_lego_carpet"), PURPLE_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "blue_lego_carpet"), BLUE_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "blue_lego_carpet"), BLUE_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "brown_lego_carpet"), BROWN_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "brown_lego_carpet"), BROWN_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "green_lego_carpet"), GREEN_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "green_lego_carpet"), GREEN_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "red_lego_carpet"), RED_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "red_lego_carpet"), RED_LEGO_CARPET_ITEM);
        Registry.register(Registry.BLOCK, new Identifier(OneDeathBlock.MOD_ID, "black_lego_carpet"), BLACK_LEGO_CARPET);
        Registry.register(Registry.ITEM, new Identifier(OneDeathBlock.MOD_ID, "black_lego_carpet"), BLACK_LEGO_CARPET_ITEM);
    }

    private static BedBlock createBedBlock(DyeColor color) {
        return new SpikedBedBlock(color, AbstractBlock.Settings.of(Material.WOOL, state -> state.get(BedBlock.PART) == BedPart.FOOT ? color.getMapColor() : MapColor.WHITE_GRAY).sounds(BlockSoundGroup.WOOD).strength(0.2f).nonOpaque());
    }
}